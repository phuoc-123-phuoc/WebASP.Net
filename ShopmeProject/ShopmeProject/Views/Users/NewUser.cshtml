@model ShopmeProject.ViewModels.UsersRolesViewModel
@{
    ViewBag.Title = ViewBag.PageTitle;
    var rolesListUser = Model.user.Roles.ToList();

}
<h2>Manage Users | @ViewBag.PageTitle</h2>

@using (Html
         .BeginForm("SaveUser", "Users", FormMethod.Post,
         new
         {
             enctype = "multipart/form-data",
             @class = "border border-secondary rounded p-3",
             style = "max-width:700px; margin: 0 auto",
             onsubmit = "return checkEmailUnique(this);"
         }))
{
@Html.HiddenFor(m => m.user.Id)
<div class="form-group row">
    @Html.LabelFor(x => x.user.Email, new { @class = "col-sm-4 col-form-label" })
    <div class="col-sm-8">
        @Html.EditorFor(x => x.user.Email, new { htmlAttributes = new { @class = "form-control", @required = "required", @minlength = "8", @maxlength = "128" } })
        @Html.ValidationMessageFor(x => x.user.Email)
    </div>
</div>
<div class="form-group row">
    @Html.LabelFor(x => x.user.FirstName, new { @class = "col-sm-4 col-form-label" })
    <div class="col-sm-8">
        @Html.EditorFor(x => x.user.FirstName, new { htmlAttributes = new { @class = "form-control", @required = "required", @minlength = "2", @maxlength = "45" } })
        @Html.ValidationMessageFor(x => x.user.FirstName)
    </div>
</div>
<div class="form-group row">
    @Html.LabelFor(x => x.user.LastName, new { @class = "col-sm-4 col-form-label" })
    <div class="col-sm-8">
        @Html.EditorFor(x => x.user.LastName, new { htmlAttributes = new { @class = "form-control", @required = "required", @minlength = "2", @maxlength = "45" } })
        @Html.ValidationMessageFor(x => x.user.LastName)
    </div>
</div>
<div class="form-group row">
    @Html.LabelFor(x => x.user.Password, new { @class = "col-sm-4 col-form-label" })
    <div class="col-sm-8">
        @if (Model.user.Id == 0)
            {
        @Html.EditorFor(x => x.user.Password, new { htmlAttributes = new { @class = "form-control", @required = "required", @minlength = "8", @maxlength = "20" } })
            }
            else
            {
        @Html.EditorFor(x => x.user.Password, new { htmlAttributes = new { @class = "form-control", @minlength = "8", @maxlength = "20" } })
            }
        @Html.ValidationMessageFor(x => x.user.Password)
    </div>
</div>




<div class="form-group row">
    <label class="col-sm-4 col-form-label">Roles:</label>
    <div class="col-sm-8">
        @for (int i = 0; i < Model.Roles.Count(); i++)
            {

        <div>
            @Html.CheckBoxFor(m => m.Roles[i].isChecked)
            @Html.LabelFor(m => m.Roles[i].isChecked, Model.Roles[i].Name)
            @Html.HiddenFor(m => m.Roles[i].Id)
            @Html.HiddenFor(m => m.Roles[i].isChecked)
            @Html.HiddenFor(m => m.Roles[i].Name)
            @Html.HiddenFor(m => m.Roles[i].Discription)
        </div>
            }
    </div>
</div>

<div class="form-group row">
    <label class="col-sm-4 col-form-label">Status:</label>
    <div class="col-sm-8">

        <div>
            @Html.CheckBoxFor(m => m.user.Enabled)
            @Html.LabelFor(m => m.user.Enabled)
            @Html.HiddenFor(m => m.user.Enabled)

        </div>

    </div>
</div>

<div class="form-group row">
    <label class="col-sm-4 col-form-label">Photos</label>
    <div class="col-sm-8">
        @Html.HiddenFor(m => m.user.Photos)
        <input type="file" id="fileImage" name="image" accept="image/png, image/jpeg"
               class="mb-2" />
        <img id="thumbnail" alt="Photos preview" src="@Model.user.PhotosImagePath" style="width: 120px; height: 150px;"
             class="img-fluid" />
    </div>
</div>




<div class="text-center">
    <input type="submit" value="Save" class="btn btn-primary m-3" />
    <input type="button" value="Cancel" class="btn btn-secondary" id="buttonCancel" />
</div>
}

<div class="modal fade text-center" id="modalDialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="modalTitle">Warning</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <div class="modal-body">
                <span id="modalBody"></span>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    var indexUrl = '@Url.Action("Index")';
    var CheckDuplicateEmailUrl = '@Url.Action("CheckDuplicateEmail")';
</script>


<script src="@Url.Content("~/Scripts/NewUser.js")"></script>
