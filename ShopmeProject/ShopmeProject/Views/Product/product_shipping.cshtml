@model ShopmeProject.ViewModels.ProductViewModel

<div  class="text-center">
    <div class="form-group row">
        The following information is important to calculate shipping cost for the product.</br>
        The dimensions (L X W X H) is for the box that is used to package the product - not the produc's demensions.
    </div>

    <div class="form-group row">
        @Html.LabelFor(x => x.product.Length, new { @class = "col-sm-2 col-form-label" })
        
        <div class="col-sm-10">

            @Html.EditorFor(x => x.product.Length, new { htmlAttributes = new { @class = "form-control col-sm-10", type = "number", step = "0.1", min = "0" } })
            @Html.ValidationMessageFor(x => x.product.Length)
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(x => x.product.Width, new { @class = "col-sm-2 col-form-label" }) 
        <div class="col-sm-10">

            @Html.EditorFor(x => x.product.Width, new { htmlAttributes = new { @class = "form-control col-sm-10", type = "number", step = "0.1", min = "0" } })
            @Html.ValidationMessageFor(x => x.product.Width)
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(x => x.product.Height, new { @class = "col-sm-2 col-form-label" }) 
        <div class="col-sm-10">

            @Html.EditorFor(x => x.product.Height, new { htmlAttributes = new { @class = "form-control col-sm-10", type = "number", step = "0.1", min = "0" } })
            @Html.ValidationMessageFor(x => x.product.Height)
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(x => x.product.Weight, new { @class = "col-sm-2 col-form-label" }) 
        <div class="col-sm-10">

            @Html.EditorFor(x => x.product.Weight, new { htmlAttributes = new { @class = "form-control col-sm-10", type = "number", step = "0.1", min = "0" } })
            @Html.ValidationMessageFor(x => x.product.Weight)
        </div>
    </div>

</div>
